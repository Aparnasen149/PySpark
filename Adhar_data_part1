1.Description: Aadhaar dataset analysis using Spark

# Input: 
#  /user/aparnasen149/adhaar.csv

# To Run this code use the command:    
# spark-submit --master yarn \
                  --conf spark.ui.port=12890 \
                  --packages com.databricks:spark-csv_2.10:1.5.0 \
	                Adhaar_Analysis.py \
	               /user/aparnasen149/adhaar.csv \

## Python Imports
from pyspark import SparkConf, SparkContext
from pyspark.sql import SQLContext,HiveContext
import sys

conf = SparkConf().setAppName("Aadhaar dataset analysis using Spark").setMaster("yarn-client")
sc = SparkContext(conf = conf)
#sqlContext = SQLContext(sparkContext=sc)
sqlContext = HiveContext(sc)

## Register dataset as a temp table
uidEnrolmentDF = sqlContext.read.format("com.databricks.spark.csv").option("header", "true").option("inferSchema","true").load("/user/aparnasen149/adhaar.csv")
uidEnrolmentDF.registerTempTable("uid_enrolments_detail")

sqlContext.sql("use aparna149")
##Create a hive table with Total Aadhaar's generated for each state
stateWiseCountDF = sqlContext.sql("SELECT State,   \
                                               SUM(`Aadhaar generated`) as count  \
                                               FROM uid_enrolments_detail \
                                               GROUP BY State \
                                               ORDER BY count DESC")

stateWiseCountDF.write.mode("overwrite").saveAsTable("state_wise_count")

 ##Create a hive table with Total Aadhaar's generated by each enrolment agency
maxEnrolmentAgencyDF = sqlContext.sql("SELECT `Enrolment Agency` as Enrolment_Agency, \
                                                   SUM(`Aadhaar generated`) as count \
                                                   FROM uid_enrolments_detail \
                                                   GROUP BY `Enrolment Agency` \
                                                   ORDER BY count DESC")

maxEnrolmentAgencyDF.write.mode("overwrite").saveAsTable("aparna149.agency_wise_count")

## Create hive table with top 10 districts with maximum Aadhaar's generated for both Male and Female
districtWiseGenderCountDF = sqlContext.sql("SELECT District,  \
                                                      count(CASE WHEN Gender='M' THEN 1 END) as male_count,  \
                                                      count(CASE WHEN Gender='F' THEN 1 END) as FEMALE_count \
                                                      FROM uid_enrolments_detail \
                                                      GROUP BY District \
                                                      ORDER BY male_count DESC, FEMALE_count DESC \
                                                      LIMIT 10 ")


